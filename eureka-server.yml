em.hostname: ${em.eureka-server.peer1.hostname}
project:
  artifactId: eureka-server
  name: Eureka Server
  description: ${project.name}

spring:
  security:
    user:
      name: ${em.spring.security.user.name}
      password: ${em.spring.security.user.password}

spring.profiles: eureka-client

eureka:
  instance:
    appname: eureka-server
    metadataMap:
      appOwner: ${project.organization.name}
      description: ${project.description}
      user:
        name: ${em.eureka-server.user.name}
        password: ${em.eureka-server.user.password}
    #    preferIpAddress: true
    lease-renewal-interval-in-seconds: 10
    statusPageUrlPath: /
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${em.eureka-server.replicas}
  server:
    enableSelfPreservation: true
#    wait-time-in-ms-when-sync-empty: 0
---
em.hostname: ${em.eureka-server.peer1.hostname}
spring:
  profiles: peer1
server:
  port: ${em.eureka-server.peer1.port}

---
em.hostname: ${em.eureka-server.peer2.hostname}
spring:
  profiles: peer2
server:
  port: ${em.eureka-server.peer2.port}

---
em.hostname: ${em.eureka-server.peer3.hostname}
#    appname: ${em.eureka-server.appName}-${em.eureka-server.peer3.hostname}
spring:
  profiles: peer3
server:
  port: ${em.eureka-server.peer3.port}

